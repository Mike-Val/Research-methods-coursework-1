Item Title,Publication Title,Book Series Title,Journal Volume,Journal Issue,Item DOI,Authors,Publication Year,URL,Content Type
CCFinderX: An Interactive Code Clone Analysis Environment,Code Clone Analysis,,,,10.1007/978-981-16-1927-4_2,Toshihiro Kamiya,2021,http://link.springer.com/chapter/10.1007/978-981-16-1927-4_2,Chapter
Source Code Clone Search,Code Clone Analysis,,,,10.1007/978-981-16-1927-4_9,Iman KeivanlooJuergen Rilling,2021,http://link.springer.com/chapter/10.1007/978-981-16-1927-4_9,Chapter
An approach to clone detection in sequence diagrams and its application to security analysis,Software & Systems Modeling,,17.0,4.0,10.1007/s10270-016-0557-6,Manar H. AlalfiElizabeth P. AntonyJames R. Cordy,2018,http://link.springer.com/article/10.1007/s10270-016-0557-6,Article
Mutation Testing-Based Evaluation Framework for Evaluating Software Clone Detection Tools,Reliability and Risk Assessment in Engineering,,,,10.1007/978-981-15-3746-2_3,Pratiksha GautamHemraj Saini,2020,http://link.springer.com/chapter/10.1007/978-981-15-3746-2_3,Chapter
ICT Systems Security and Privacy Protection,IFIP Advances in Information and Communication Technology,,,,10.1007/978-3-031-06975-8,Dr. Weizhi MengSimone Fischer-HübnerDr. Christian D. Jensen,2022,http://link.springer.com/book/10.1007/978-3-031-06975-8,Book
ICT Systems Security and Privacy Protection,IFIP Advances in Information and Communication Technology,,,,10.1007/978-3-030-78120-0,Prof. Audun JøsangLynn FutcherJanne Hagen,2021,http://link.springer.com/book/10.1007/978-3-030-78120-0,Book
Reuse and Software Quality,Lecture Notes in Computer Science,,,,10.1007/978-3-031-08129-3,Gilles PerrouinDr. Naouel MohaAbdelhak-Djamel Seriai,2022,http://link.springer.com/book/10.1007/978-3-031-08129-3,Book
"Parallel and Distributed Computing, Applications and Technologies",Lecture Notes in Computer Science,,,,10.1007/978-3-030-96772-7,Hong ShenDr. Yingpeng SangYong ZhangNong XiaoDr. Hamid R. ArabniaGeoffrey FoxProf. Ajay GuptaManu Malek,2022,http://link.springer.com/book/10.1007/978-3-030-96772-7,Book
"Clones in deep learning code: what, where, and why?",Empirical Software Engineering,,27.0,4.0,10.1007/s10664-021-10099-x,Hadhemi JebnounMd Saidur RahmanFoutse KhomhBiruk Asmare Muse,2022,http://link.springer.com/article/10.1007/s10664-021-10099-x,Article
Data Science,Communications in Computer and Information Science,,,,10.1007/978-981-16-5940-9,Jianchao ZengPinle QinWeipeng JingProf. Xianhua SongZeguang Lu,2021,http://link.springer.com/book/10.1007/978-981-16-5940-9,Book
Transformer-based networks over tree structures for code classification,Applied Intelligence,,52.0,8.0,10.1007/s10489-021-02894-2,Wei HuaGuangzhong Liu,2022,http://link.springer.com/article/10.1007/s10489-021-02894-2,Article
Clone Evolution and Management,Code Clone Analysis,,,,10.1007/978-981-16-1927-4_14,Norihiro YoshidaEunjong Choi,2021,http://link.springer.com/chapter/10.1007/978-981-16-1927-4_14,Chapter
Testing Software and Systems,Lecture Notes in Computer Science,,,,10.1007/978-3-031-04673-5,David ClarkProf. Dr. Hector MenendezAna Rosa Cavalli,2022,http://link.springer.com/book/10.1007/978-3-031-04673-5,Book
An Efficient Architectural Framework for Non-obtrusive and Instantaneous Real-Time Identification of Clones During the Software Development Process in IDE,Advanced Informatics for Computing Research,,,,10.1007/978-981-15-0111-1_35,Sarveshwar BhartiHardeep Singh,2019,http://link.springer.com/chapter/10.1007/978-981-15-0111-1_35,Chapter
Fundamental Approaches to Software Engineering,Lecture Notes in Computer Science,,,,10.1007/978-3-030-99429-7,Prof. Einar Broch JohnsenProf. Manuel Wimmer,2022,http://link.springer.com/book/10.1007/978-3-030-99429-7,Book
"Knowledge Science, Engineering and Management",Lecture Notes in Computer Science,,,,10.1007/978-3-031-10989-8,Gerard MemmiBaijian YangProf. Linghe KongTianwei ZhangProf. Dr. Meikang Qiu,2022,http://link.springer.com/book/10.1007/978-3-031-10989-8,Book
Characterizing Code Clones in the Ethereum Smart Contract Ecosystem,Financial Cryptography and Data Security,,,,10.1007/978-3-030-51280-4_35,Ningyu HeLei WuHaoyu WangYao GuoXuxian Jiang,2020,http://link.springer.com/chapter/10.1007/978-3-030-51280-4_35,Chapter
"Sometimes, Cloning Is a Sound Design Decision!",Code Clone Analysis,,,,10.1007/978-981-16-1927-4_15,Michael W. GodfreyCory J. Kapser,2021,http://link.springer.com/chapter/10.1007/978-981-16-1927-4_15,Chapter
"Insight to Model Clone’s Differentiation, Classification, and Visualization",International Conference on Innovative Computing and Communications,,,,10.1007/978-981-15-5148-2_43,Ritu GargR. K. Singh,2021,http://link.springer.com/chapter/10.1007/978-981-15-5148-2_43,Chapter
Evaluating the robustness of source code plagiarism detection tools to pervasive plagiarism-hiding modifications,Empirical Software Engineering,,26.0,5.0,10.1007/s10664-021-09990-4,Hayden CheersYuqing LinShamus P. Smith,2021,http://link.springer.com/article/10.1007/s10664-021-09990-4,Article
Can pre-trained code embeddings improve model performance? Revisiting the use of code embeddings in software engineering tasks,Empirical Software Engineering,,27.0,3.0,10.1007/s10664-022-10118-5,Zishuo DingHeng LiWeiyi ShangTse-Hsun Peter Chen,2022,http://link.springer.com/article/10.1007/s10664-022-10118-5,Article
Enterprise Information Systems,Lecture Notes in Business Information Processing,,,,10.1007/978-3-030-75418-1,Prof. Dr. Joaquim FilipeMichał ŚmiałekAlexander BrodskySlimane Hammoudi,2021,http://link.springer.com/book/10.1007/978-3-030-75418-1,Book
Smart Computing Techniques and Applications,"Smart Innovation, Systems and Technologies",,,,10.1007/978-981-16-0878-0,Dr. Suresh Chandra SatapathyDr. Vikrant BhatejaProf. Margarita N. FavorskayaDr. T. Adilakshmi,2021,http://link.springer.com/book/10.1007/978-981-16-0878-0,Book
Learning Human-Written Commit Messages to Document Code Changes,Journal of Computer Science and Technology,,35.0,6.0,10.1007/s11390-020-0496-0,Yuan HuangNan JiaHao-Jie ZhouXiang-Ping ChenZi-Bin ZhengMing-Dong Tang,2020,http://link.springer.com/article/10.1007/s11390-020-0496-0,Article
Code Representation Based on Hybrid Graph Modelling,Neural Information Processing,,,,10.1007/978-3-030-92307-5_35,Qiong WuXue JiangZhuoran ZhengXuejian GaoChen LyuLei Lyu,2021,http://link.springer.com/chapter/10.1007/978-3-030-92307-5_35,Chapter
A Study on the Method of Removing Code Duplication Using Code Template,"Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing",,,,10.1007/978-3-319-98367-7_3,Woochang Shin,2019,http://link.springer.com/chapter/10.1007/978-3-319-98367-7_3,Chapter
Automatically Identifying Calling-Prone Higher-Order Functions of Scala Programs to Assist Testers,Journal of Computer Science and Technology,,35.0,6.0,10.1007/s11390-020-0526-y,Yi-Sen XuXiang-Yang JiaFan WuLingbo LiJi-Feng Xuan,2020,http://link.springer.com/article/10.1007/s11390-020-0526-y,Article
Community Knowledge About Security:,Risks and Security of Internet and Systems,,,,10.1007/978-3-030-68887-5_11,Fabien Patrick ViertelWasja BrunotteYannick EversKurt Schneider,2021,http://link.springer.com/chapter/10.1007/978-3-030-68887-5_11,Chapter
Detecting Near Duplicates in Software Documentation,Programming and Computer Software,,44.0,5.0,10.1134/S0361768818050079,D. V. LucivD. V. KoznovG. A. ChernishevA. N. TerekhovK. Yu. RomanovskyD. A. Grigoriev,2018,http://link.springer.com/article/10.1134/S0361768818050079,Article
The last line effect explained,Empirical Software Engineering,,22.0,3.0,10.1007/s10664-016-9489-6,Moritz BellerAndy ZaidmanAndrey KarpovRolf A. Zwaan,2017,http://link.springer.com/article/10.1007/s10664-016-9489-6,Article
Neural Information Processing,Communications in Computer and Information Science,,,,10.1007/978-3-030-92307-5,Dr. Teddy MantoroMinho LeeMedia Anugerah AyuDr. Kok Wai WongDr. Achmad Nizar Hidayanto,2021,http://link.springer.com/book/10.1007/978-3-030-92307-5,Book
Analysis of license inconsistency in large collections of open source projects,Empirical Software Engineering,,22.0,3.0,10.1007/s10664-016-9487-8,Yuhao WuYuki ManabeTetsuya KandaDaniel M. GermanKatsuro Inoue,2017,http://link.springer.com/article/10.1007/s10664-016-9487-8,Article
Computational Science and Its Applications – ICCSA 2021,Lecture Notes in Computer Science,,,,10.1007/978-3-030-87007-2,Prof. Dr. Osvaldo GervasiBeniamino MurganteDr. Sanjay MisraDr. Chiara GarauIvan BlečićDavid TaniarBernady O. ApduhanAna Maria A. C. RochaEufemia TarantinoCarmelo Maria Torre,2021,http://link.springer.com/book/10.1007/978-3-030-87007-2,Book
Measuring the effect of clone refactoring on the size of unit test cases in object-oriented software: an empirical study,Innovations in Systems and Software Engineering,,15.0,2.0,10.1007/s11334-019-00334-6,Mourad BadriLinda BadriOussama HachemaneAlexandre Ouellet,2019,http://link.springer.com/article/10.1007/s11334-019-00334-6,Article
Cloned and non-cloned Java methods: a comparative study,Empirical Software Engineering,,23.0,4.0,10.1007/s10664-017-9572-7,Vaibhav SainiHitesh SajnaniCristina Lopes,2018,http://link.springer.com/article/10.1007/s10664-017-9572-7,Article
CASFinder: Detecting Common Attack Surface,Data and Applications Security and Privacy XXXIII,,,,10.1007/978-3-030-22479-0_18,Mengyuan ZhangYue XinLingyu WangSushil JajodiaAnoop Singhal,2019,http://link.springer.com/chapter/10.1007/978-3-030-22479-0_18,Chapter
"Models, More Models, and Then a Lot More",Software Technologies: Applications and Foundations,,,,10.1007/978-3-319-74730-9_10,Önder BaburLoek CleophasMark van den BrandBedir TekinerdoganMehmet Aksit,2018,http://link.springer.com/chapter/10.1007/978-3-319-74730-9_10,Chapter
Digital Forensics and Cyber Crime,"Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering",,,,10.1007/978-3-031-06365-7,Dr. Pavel GladyshevProf. Sanjay GoelJoshua JamesDr. George MarkowskyDaryl Johnson,2022,http://link.springer.com/book/10.1007/978-3-031-06365-7,Book
SolarWinds Software Supply Chain Security: Better Protection with Enforced Policies and Technologies,"Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing",,,,10.1007/978-3-030-92317-4_4,Jeong YangYoung LeeArlen P. McDonald,2022,http://link.springer.com/chapter/10.1007/978-3-030-92317-4_4,Chapter
BinSign: Fingerprinting Binary Functions to Support Automated Analysis of Code Executables,ICT Systems Security and Privacy Protection,,,,10.1007/978-3-319-58469-0_23,Lina NouhAshkan RahimianDjedjiga MouhebMourad DebbabiAiman Hanna,2017,http://link.springer.com/chapter/10.1007/978-3-319-58469-0_23,Chapter
Source code change analysis with deep learning based programming model,Automated Software Engineering,,29.0,1.0,10.1007/s10515-021-00305-x,Babita PathikMeena Sharma,2022,http://link.springer.com/article/10.1007/s10515-021-00305-x,Article
"Graph Neural Networks: Foundations, Frontiers, and Applications",,,,,10.1007/978-981-16-6054-2,Lingfei WuPeng CuiJian PeiLiang Zhao,2022,http://link.springer.com/book/10.1007/978-981-16-6054-2,Book
"Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing",Studies in Computational Intelligence,,,,10.1007/978-3-030-92317-4,Dr. Roger Lee,2022,http://link.springer.com/book/10.1007/978-3-030-92317-4,Book
Product-Focused Software Process Improvement,Lecture Notes in Computer Science,,,,10.1007/978-3-030-64148-1,Dr. Maurizio MorisioProf. Marco TorchianoAndreas Jedlitschka,2020,http://link.springer.com/book/10.1007/978-3-030-64148-1,Book
Ammonia: an approach for deriving project-specific bug patterns,Empirical Software Engineering,,25.0,3.0,10.1007/s10664-020-09807-w,Yoshiki HigoShinpei HayashiHideaki HataMeiyappan Nagappan,2020,http://link.springer.com/article/10.1007/s10664-020-09807-w,Article
Formal Verification of Developer Tests: A Research Agenda Inspired by Mutation Testing,"Leveraging Applications of Formal Methods, Verification and Validation: Engineering Principles",,,,10.1007/978-3-030-61470-6_2,Serge DemeyerAli ParsaiSten VercammenBrent van BladelMehrdad Abdi,2020,http://link.springer.com/chapter/10.1007/978-3-030-61470-6_2,Chapter
On the relationship between similar requirements and similar software,Requirements Engineering,,,,10.1007/s00766-021-00370-4,Muhammad AbbasAlessio FerrariAnas ShatnawiEduard EnoiuMehrdad SaadatmandDaniel Sundmark,2022,http://link.springer.com/article/10.1007/s00766-021-00370-4,Article
Blockchain Intelligence,,,,,10.1007/978-981-16-0127-9,Prof. Dr. Zibin ZhengDr. Hong-Ning DaiDr. Jiajing Wu,2021,http://link.springer.com/book/10.1007/978-981-16-0127-9,Book
Usage and attribution of Stack Overflow code snippets in GitHub projects,Empirical Software Engineering,,24.0,3.0,10.1007/s10664-018-9650-5,Sebastian BaltesStephan Diehl,2019,http://link.springer.com/article/10.1007/s10664-018-9650-5,Article
"Advances in Natural Computation, Fuzzy Systems and Knowledge Discovery",Lecture Notes on Data Engineering and Communications Technologies,,,,10.1007/978-3-030-89698-0,Quan XieLiang ZhaoProf. Kenli LiDr. Anupam YadavProf. Dr. Lipo Wang,2022,http://link.springer.com/book/10.1007/978-3-030-89698-0,Book
Granularity-Based Assessment of Similarity Between Short Text Strings,"Proceedings of the Third International Conference on Microelectronics, Computing and Communication Systems",,,,10.1007/978-981-13-7091-5_9,Harpreet KaurRaman Maini,2019,http://link.springer.com/chapter/10.1007/978-981-13-7091-5_9,Chapter
DeepClone: Modeling Clones to Generate Code Predictions,Reuse in Emerging Software Engineering Practices,,,,10.1007/978-3-030-64694-3_9,Muhammad HammadÖnder BaburHamid Abdul BasitMark van den Brand,2020,http://link.springer.com/chapter/10.1007/978-3-030-64694-3_9,Chapter
FACER: An API usage-based code-example recommender for opportunistic reuse,Empirical Software Engineering,,26.0,6.0,10.1007/s10664-021-10000-w,Shamsa AbidShafay ShamailHamid Abdul BasitSarah Nadi,2021,http://link.springer.com/article/10.1007/s10664-021-10000-w,Article
International Conference on Artificial Intelligence and Sustainable Engineering,Lecture Notes in Electrical Engineering,,,,10.1007/978-981-16-8546-0,Prof. Goutam SanyalCarlos M. Travieso-GonzálezDr. Shashank AwasthiDr. Carla M.A. PintoDr. B. R. Purushothama,2022,http://link.springer.com/book/10.1007/978-981-16-8546-0,Book
"Communication, Networks and Computing",Communications in Computer and Information Science,,,,10.1007/978-981-16-8896-6,Ranjeet Singh TomarDr. Shekhar VermaBrijesh Kumar ChaurasiaVrijendra SinghJemal AbawajyDr. Shyam AkasheDr. Pao-Ann HsiungProf. Vijay K. Bhargava,2021,http://link.springer.com/book/10.1007/978-981-16-8896-6,Book
Explainable and Transparent AI and Multi-Agent Systems,Lecture Notes in Computer Science,,,,10.1007/978-3-030-82017-6,Dr. Davide CalvaresiAmro NajjarProf. Michael WinikoffKary Främling,2021,http://link.springer.com/book/10.1007/978-3-030-82017-6,Book
Where were the repair ingredients for Defects4j bugs?,Empirical Software Engineering,,26.0,6.0,10.1007/s10664-021-10003-7,Deheng YangKui LiuDongsun KimAnil KoyuncuKisub KimHaoye TianYan LeiXiaoguang MaoJacques KleinTegawendé F. Bissyandé,2021,http://link.springer.com/article/10.1007/s10664-021-10003-7,Article
Deep Learning-Based Software Energy Consumption Profiling,Artificial Intelligence and Applied Mathematics in Engineering Problems,,,,10.1007/978-3-030-36178-5_7,Muhammed Maruf Öztürk,2020,http://link.springer.com/chapter/10.1007/978-3-030-36178-5_7,Chapter
Bin2vec: learning representations of binary executable programs for security tasks,Cybersecurity,,4.0,1.0,10.1186/s42400-021-00088-4,Shushan ArakelyanSima ArastehChristophe HauserErik KlineAram Galstyan,2021,http://link.springer.com/article/10.1186/s42400-021-00088-4,Article
Natural Language-Based Automatic Programming for Industrial Robots,Journal of Grid Computing,,20.0,3.0,10.1007/s10723-022-09618-x,Haiyang HuJie ChenHanwen LiuZhongjin LiLiguo Huang,2022,http://link.springer.com/article/10.1007/s10723-022-09618-x,Article
A Unified Measurement Solution of Software Trustworthiness Based on Social-to-Software Framework,Journal of Computer Science and Technology,,33.0,3.0,10.1007/s11390-018-1843-2,Xi YangGul JabeenPing LuoXiao-Ling ZhuMei-Hua Liu,2018,http://link.springer.com/article/10.1007/s11390-018-1843-2,Article
Software system comparison with semantic source code embeddings,Empirical Software Engineering,,27.0,3.0,10.1007/s10664-022-10122-9,Sašo KarakatičAleksej MiloševičTjaša Heričko,2022,http://link.springer.com/article/10.1007/s10664-022-10122-9,Article
Advanced Information Systems Engineering,Lecture Notes in Computer Science,,,,10.1007/978-3-030-49435-3,Prof. Dr. Schahram DustdarDr. Eric YuCamille SalinesiDominique RieuVik Pant,2020,http://link.springer.com/book/10.1007/978-3-030-49435-3,Book
Analyses for specific defects in android applications: a survey,Frontiers of Computer Science,,13.0,6.0,10.1007/s11704-018-7008-1,Tianyong WuXi DengJun YanJian Zhang,2019,http://link.springer.com/article/10.1007/s11704-018-7008-1,Article
Fast code recommendation via approximate sub-tree matching,Frontiers of Information Technology & Electronic Engineering,,23.0,8.0,10.1631/FITEE.2100379,Yichao Shao 邵宜超Zhiqiu Huang 黄志球Weiwei Li 李伟湋Yaoshen Yu 喻垚慎,2022,http://link.springer.com/article/10.1631/FITEE.2100379,Article
Technical Debt in Model Transformation Specifications,Theory and Practice of Model Transformation,,,,10.1007/978-3-319-93317-7_6,Kevin LanoShekoufeh Kolahdouz-RahimiMohammadreza SharbafHessa Alfraihi,2018,http://link.springer.com/chapter/10.1007/978-3-319-93317-7_6,Chapter
Handbook on Artificial Intelligence-Empowered Applied Software Engineering,Artificial Intelligence-Enhanced Software and Systems Engineering,,,,10.1007/978-3-031-08202-3,Maria VirvouGeorge A. TsihrintzisNikolaos G. BourbakisLakhmi C. Jain,2022,http://link.springer.com/book/10.1007/978-3-031-08202-3,Book
Guided pattern mining for API misuse detection by change-based code analysis,Automated Software Engineering,,28.0,2.0,10.1007/s10515-021-00294-x,Sebastian NielebockRobert HeumüllerKevin Michael SchottFrank Ortmeier,2021,http://link.springer.com/article/10.1007/s10515-021-00294-x,Article
Data Science,Communications in Computer and Information Science,,,,10.1007/978-981-16-5943-0,Jianchao ZengPinle QinWeipeng JingProf. Xianhua SongZeguang Lu,2021,http://link.springer.com/book/10.1007/978-981-16-5943-0,Book
Intelligence-Driven Optimization of Smart Contracts,Blockchain Intelligence,,,,10.1007/978-981-16-0127-9_4,Yuan HuangQueping KongNan JiaXiangping ChenZibin Zheng,2021,http://link.springer.com/chapter/10.1007/978-981-16-0127-9_4,Chapter
Predicting Effectiveness of Generate-and-Validate Patch Generation Systems Using Random Forest,Wuhan University Journal of Natural Sciences,,23.0,6.0,10.1007/s11859-018-1358-2,Yong XuBo HuangXiaoning ZouLiying Kong,2018,http://link.springer.com/article/10.1007/s11859-018-1358-2,Article
TBCNN for Programs’ Abstract Syntax Trees,Tree-Based Convolutional Neural Networks,,,,10.1007/978-981-13-1870-2_4,Lili MouZhi Jin,2018,http://link.springer.com/chapter/10.1007/978-981-13-1870-2_4,Chapter
Inspecting Code Churns to Prioritize Test Cases,Testing Software and Systems,,,,10.1007/978-3-030-64881-7_17,Francesco AltieroAnna CorazzaSergio Di MartinoAdriano PeronLuigi Libero Lucio Starace,2020,http://link.springer.com/chapter/10.1007/978-3-030-64881-7_17,Chapter
Source Code Authorship Attribution Using Long Short-Term Memory Based Networks,Computer Security – ESORICS 2017,,,,10.1007/978-3-319-66402-6_6,Bander AlsulamiEdwin DauberRichard HarangSpiros MancoridisRachel Greenstadt,2017,http://link.springer.com/chapter/10.1007/978-3-319-66402-6_6,Chapter
Synergies Between Artificial Intelligence and Software Engineering: Evolution and Trends,Handbook on Artificial Intelligence-Empowered Applied Software Engineering,,,,10.1007/978-3-031-08202-3_2,Aurora RamírezJosé Raúl Romero,2022,http://link.springer.com/chapter/10.1007/978-3-031-08202-3_2,Chapter
The flowing nature matters: feature learning from the control flow graph of source code for bug localization,Machine Learning,,111.0,3.0,10.1007/s10994-021-06078-4,Yi-Fan MaMing Li,2022,http://link.springer.com/article/10.1007/s10994-021-06078-4,Article
Decomposing Composite Changes for Code Review and Regression Test Selection in Evolving Software,Journal of Computer Science and Technology,,34.0,2.0,10.1007/s11390-019-1917-9,Bo GuoYoung-Woo KwonMyoungkyu Song,2019,http://link.springer.com/article/10.1007/s11390-019-1917-9,Article
Birthmark-Based Software Classification Using Rough Sets,Arabian Journal for Science and Engineering,,42.0,2.0,10.1007/s13369-016-2371-4,Shah NazirSara ShahzadLala Septem Riza,2017,http://link.springer.com/article/10.1007/s13369-016-2371-4,Article
Improving a Software Modernisation Process by Differencing Migration Logs,Product-Focused Software Process Improvement,,,,10.1007/978-3-030-64148-1_17,Céline DeknopJohan FabryKim MensVadim Zaytsev,2020,http://link.springer.com/chapter/10.1007/978-3-030-64148-1_17,Chapter
The Notion of a Software Language,Software Languages,,,,10.1007/978-3-319-90800-7_1,Ralf Lämmel,2018,http://link.springer.com/chapter/10.1007/978-3-319-90800-7_1,Chapter
API trustworthiness: an ontological approach for software library adoption,Software Quality Journal,,27.0,3.0,10.1007/s11219-018-9428-4,Ellis E. EghanSultan S. AlqahtaniChristopher ForbesJuergen Rilling,2019,http://link.springer.com/article/10.1007/s11219-018-9428-4,Article
Quick remedy commits and their impact on mining software repositories,Empirical Software Engineering,,27.0,1.0,10.1007/s10664-021-10051-z,Fengcai WenCsaba NagyMichele LanzaGabriele Bavota,2021,http://link.springer.com/article/10.1007/s10664-021-10051-z,Article
Software Sustainability,,,,,10.1007/978-3-030-69970-3,Prof. Coral CaleroDr. Mª Ángeles MoragaProf. Mario Piattini,2021,http://link.springer.com/book/10.1007/978-3-030-69970-3,Book
Classification Model Based Automatic Static Evaluation Method for C Programs,"Advances in Natural Computation, Fuzzy Systems and Knowledge Discovery",,,,10.1007/978-3-030-89698-0_47,Xinfeng ShuFangyao Guo,2022,http://link.springer.com/chapter/10.1007/978-3-030-89698-0_47,Chapter
Redundancy-free analysis of multi-revision software artifacts,Empirical Software Engineering,,24.0,1.0,10.1007/s10664-018-9630-9,Carol V. AlexandruSebastiano PanichellaSebastian ProkschHarald C. Gall,2019,http://link.springer.com/article/10.1007/s10664-018-9630-9,Article
Proceedings of Sixth International Congress on Information and Communication Technology,Lecture Notes in Networks and Systems,,,,10.1007/978-981-16-2102-4,Dr. Xin-She YangDr. Simon SherrattDr. Nilanjan DeyDr. Amit Joshi,2022,http://link.springer.com/book/10.1007/978-981-16-2102-4,Book
"Dependable Software Engineering. Theories, Tools, and Applications",Lecture Notes in Computer Science,,,,10.1007/978-3-030-91265-9,Prof. Shengchao QinProf. Dr. Jim WoodcockWenhui Zhang,2021,http://link.springer.com/book/10.1007/978-3-030-91265-9,Book
Evaluation of Novel Approaches to Software Engineering,Communications in Computer and Information Science,,,,10.1007/978-3-030-96648-5,Raian AliProf. Dr. Hermann KaindlProf. Leszek A. Maciaszek,2022,http://link.springer.com/book/10.1007/978-3-030-96648-5,Book
Deep code comment generation with hybrid lexical and syntactical information,Empirical Software Engineering,,25.0,3.0,10.1007/s10664-019-09730-9,Xing HuGe LiXin XiaDavid LoZhi Jin,2020,http://link.springer.com/article/10.1007/s10664-019-09730-9,Article
Learning to Generate Comments for API-Based Code Snippets,Software Engineering and Methodology for Emerging Domains,,,,10.1007/978-981-15-0310-8_1,Yangyang LuZelong ZhaoGe LiZhi Jin,2019,http://link.springer.com/chapter/10.1007/978-981-15-0310-8_1,Chapter
Graph Neural Networks in Software Mining,"Graph Neural Networks: Foundations, Frontiers, and Applications",,,,10.1007/978-981-16-6054-2_23,Collin McMillan,2022,http://link.springer.com/chapter/10.1007/978-981-16-6054-2_23,Chapter
Extracting and studying the Logging-Code-Issue- Introducing changes in Java-based large-scale open source software systems,Empirical Software Engineering,,24.0,4.0,10.1007/s10664-019-09690-0,Boyuan ChenZhen Ming (Jack) Jiang,2019,http://link.springer.com/article/10.1007/s10664-019-09690-0,Article
Towards the application of recommender systems to secure coding,EURASIP Journal on Information Security,,2019.0,1.0,10.1186/s13635-019-0092-4,Fitzroy D. NembhardMarco M. CarvalhoThomas C. Eskridge,2019,http://link.springer.com/article/10.1186/s13635-019-0092-4,Article
Same-Same But Different: On Understanding Duplicates in Stack Overflow,Informatik Spektrum,,42.0,4.0,10.1007/s00287-019-01185-y,Mathias Ellmann,2019,http://link.springer.com/article/10.1007/s00287-019-01185-y,Article
Ethereum smart contract security research: survey and future research opportunities,Frontiers of Computer Science,,15.0,2.0,10.1007/s11704-020-9284-9,Zeli WangHai JinWeiqi DaiKim-Kwang Raymond ChooDeqing Zou,2020,http://link.springer.com/article/10.1007/s11704-020-9284-9,Article
From Simple to Structural Clones: Tapping the Benefits of Non-redundancy,Enterprise Information Systems,,,,10.1007/978-3-030-75418-1_26,Stan Jarzabek,2021,http://link.springer.com/chapter/10.1007/978-3-030-75418-1_26,Chapter
On the Assessment of Security and Performance Bugs in Chromium Open-Source Project,"Dependability in Sensor, Cloud, and Big Data Systems and Applications",,,,10.1007/978-981-15-1304-6_12,Joseph ImseisCostain NachumaShaikh ArifuzzamanMinhaz ZibranZakirul Alam Bhuiyan,2019,http://link.springer.com/chapter/10.1007/978-981-15-1304-6_12,Chapter
Extracting Semantics from Question-Answering Services for Snippet Reuse,Fundamental Approaches to Software Engineering,,,,10.1007/978-3-030-45234-6_6,Themistoklis DiamantopoulosNikolaos OikonomouAndreas Symeonidis,2020,http://link.springer.com/chapter/10.1007/978-3-030-45234-6_6,Chapter
Theoretical Aspects of Software Engineering,Lecture Notes in Computer Science,,,,10.1007/978-3-031-10363-6,Yamine Aït-AmeurFlorin Crăciun,2022,http://link.springer.com/book/10.1007/978-3-031-10363-6,Book
"Language, Logic, and Computation",Lecture Notes in Computer Science,,,,10.1007/978-3-030-98479-3,Dr. Aybüke ÖzgünYulia Zinova,2022,http://link.springer.com/book/10.1007/978-3-030-98479-3,Book
Optimization Models in Software Reliability,Springer Series in Reliability Engineering,,,,10.1007/978-3-030-78919-0,Prof. Anu G. AggarwalAssist. Prof. Abhishek TandonProf. Hoang Pham,2022,http://link.springer.com/book/10.1007/978-3-030-78919-0,Book
"Detection of Intrusions and Malware, and Vulnerability Assessment",Lecture Notes in Computer Science,,,,10.1007/978-3-031-09484-2,Lorenzo CavallaroDaniel GrussGiancarlo PellegrinoGiorgio Giacinto,2022,http://link.springer.com/book/10.1007/978-3-031-09484-2,Book
Proceedings of the ICR’22 International Conference on Innovations in Computing Research,Advances in Intelligent Systems and Computing,,,,10.1007/978-3-031-14054-9,Dr. Kevin DaimiAbeer Al Sadoon,2022,http://link.springer.com/book/10.1007/978-3-031-14054-9,Book
Proceedings of Research and Applications in Artificial Intelligence,Advances in Intelligent Systems and Computing,,,,10.1007/978-981-16-1543-6,Dr. Indrajit PanDr. Anirban MukherjeeProf. Vincenzo Piuri,2021,http://link.springer.com/book/10.1007/978-981-16-1543-6,Book
Matching and Generalization Modulo Proximity and Tolerance Relations,"Language, Logic, and Computation",,,,10.1007/978-3-030-98479-3_16,Temur KutsiaCleo Pau,2022,http://link.springer.com/chapter/10.1007/978-3-030-98479-3_16,Chapter
Continuous validation of performance test workloads,Automated Software Engineering,,24.0,1,10.1007/s10515-016-0196-8,Mark D. SyerWeiyi ShangZhen Ming JiangAhmed E. Hassan,2017,http://link.springer.com/article/10.1007/s10515-016-0196-8,Article
Visual exploration of software evolution via topic modeling,Journal of Visualization,,24.0,4,10.1007/s12650-020-00739-7,Huan LiuYubo TaoYining QiuWenda HuangHai Lin,2021,http://link.springer.com/article/10.1007/s12650-020-00739-7,Article
Using the Strings Metadata to Detect the Source Language of the Binary,Proceedings of the ICR’22 International Conference on Innovations in Computing Research,,,,10.1007/978-3-031-14054-9_19,Ashish AdhikariPrasad A. Kulkarni,2022,http://link.springer.com/chapter/10.1007/978-3-031-14054-9_19,Chapter
Understanding the Brains and Brawn of Illicit Streaming App,Digital Forensics and Cyber Crime,,,,10.1007/978-3-031-06365-7_12,Kong HuangKe ZhangJiongyi ChenMenghan SunWei SunDi TangKehuan Zhang,2022,http://link.springer.com/chapter/10.1007/978-3-031-06365-7_12,Chapter
Automatically recommending components for issue reports using deep learning,Empirical Software Engineering,,26.0,2,10.1007/s10664-020-09898-5,Morakot ChoetkiertikulHoa Khanh DamTruyen TranTrang PhamChaiyong RagkhitwetsagulAditya Ghose,2021,http://link.springer.com/article/10.1007/s10664-020-09898-5,Article
Detection of Online Malicious Behavior: An Overview,Ambient Communications and Computer Systems,,,,10.1007/978-981-13-5934-7_2,D. S. DeshpandeS. P. DeshpandeV. M. Thakare,2019,http://link.springer.com/chapter/10.1007/978-981-13-5934-7_2,Chapter
Learning to recognize actionable static code warnings (is intrinsically easy),Empirical Software Engineering,,26.0,3,10.1007/s10664-021-09948-6,Xueqi YangJianfeng ChenRahul YedidaZhe YuTim Menzies,2021,http://link.springer.com/article/10.1007/s10664-021-09948-6,Article
Effect of Identifier Tokenization on Automatic Source Code Documentation,Arabian Journal for Science and Engineering,,47.0,2,10.1007/s13369-021-06149-7,Sawan RaiRamesh Chandra BelwalAtul Gupta,2022,http://link.springer.com/article/10.1007/s13369-021-06149-7,Article
Domain Adaptation of Transformers for English Word Segmentation,Intelligent Systems,,,,10.1007/978-3-030-61377-8_33,Ruan Chaves RodriguesAcquila Santos RochaMarcelo Akira InuzukaHugo Alexandre Dantas do Nascimento,2020,http://link.springer.com/chapter/10.1007/978-3-030-61377-8_33,Chapter
An Insight on Software Features Supporting Software Transplantation: A Systematic Review,Archives of Computational Methods in Engineering,,29.0,1,10.1007/s11831-021-09593-8,Gurjot Singh SodhiDhavleesh Rattan,2022,http://link.springer.com/article/10.1007/s11831-021-09593-8,Article
Code Property Graph-Based Vulnerability Dataset Generation for Source Code Detection,Frontiers in Cyber Security,,,,10.1007/978-981-15-9739-8_43,Zhibin GuanXiaomeng WangWei XinJiajie Wang,2020,http://link.springer.com/chapter/10.1007/978-981-15-9739-8_43,Chapter
Automatic query reformulation for code search using crowdsourced knowledge,Empirical Software Engineering,,24.0,4,10.1007/s10664-018-9671-0,Mohammad M. RahmanChanchal K. RoyDavid Lo,2019,http://link.springer.com/article/10.1007/s10664-018-9671-0,Article
Study on Binary Code Evolution with Concrete Semantic Analysis,Data Science,,,,10.1007/978-981-16-5943-0_3,Bing XiaJianmin PangJun WangFudong LiuFeng Yue,2021,http://link.springer.com/chapter/10.1007/978-981-16-5943-0_3,Chapter
CodeAttention: translating source code to comments by exploiting the code constructs,Frontiers of Computer Science,,13.0,3,10.1007/s11704-018-7457-6,Wenhao ZhengHongyu ZhouMing LiJianxin Wu,2019,http://link.springer.com/article/10.1007/s11704-018-7457-6,Article
"Publish or perish, but do not forget your software artifacts",Empirical Software Engineering,,25.0,6,10.1007/s10664-020-09851-6,Robert HeumüllerSebastian NielebockJacob KrügerFrank Ortmeier,2020,http://link.springer.com/article/10.1007/s10664-020-09851-6,Article
Defect Prediction in Android Binary Executables Using Deep Neural Network,Wireless Personal Communications,,102.0,3,10.1007/s11277-017-5069-3,Feng DongJunfeng WangQi LiGuoai XuShaodong Zhang,2018,http://link.springer.com/article/10.1007/s11277-017-5069-3,Article
Do developers update their library dependencies?,Empirical Software Engineering,,23.0,1,10.1007/s10664-017-9521-5,Raula Gaikovina KulaDaniel M. GermanAli OuniTakashi IshioKatsuro Inoue,2018,http://link.springer.com/article/10.1007/s10664-017-9521-5,Article
XtraLibD: Detecting Irrelevant Third-Party Libraries in Java and Python Applications,Evaluation of Novel Approaches to Software Engineering,,,,10.1007/978-3-030-96648-5_7,Ritu KapurPoojith U. RaoAgrim DewamBalwinder Sodhi,2022,http://link.springer.com/chapter/10.1007/978-3-030-96648-5_7,Chapter
Mining Source Code for Snippet Reuse,Mining Software Engineering Data for Software Reuse,,,,10.1007/978-3-030-30106-4_7,Themistoklis DiamantopoulosAndreas L. Symeonidis,2020,http://link.springer.com/chapter/10.1007/978-3-030-30106-4_7,Chapter
An Efficient Algorithm for Combining Verification and Validation Methods,SOFSEM 2019: Theory and Practice of Computer Science,,,,10.1007/978-3-030-10801-4_26,Isela MendozaUéverton SouzaMarcos KalinowskiRuben InterianLeonado Gresta Paulino Murta,2019,http://link.springer.com/chapter/10.1007/978-3-030-10801-4_26,Chapter
Mining the use of higher-order functions:,Empirical Software Engineering,,25.0,6,10.1007/s10664-020-09842-7,Yisen XuFan WuXiangyang JiaLingbo LiJifeng Xuan,2020,http://link.springer.com/article/10.1007/s10664-020-09842-7,Article
AIdetectorX: A Vulnerability Detector Based on TCN and Self-attention Mechanism,"Dependable Software Engineering. Theories, Tools, and Applications",,,,10.1007/978-3-030-91265-9_9,Jinfu ChenBo LiuSaihua CaiWeijia WangShengran Wang,2021,http://link.springer.com/chapter/10.1007/978-3-030-91265-9_9,Chapter
Fine-Grained Obfuscation Scheme Recognition on Binary Code,Digital Forensics and Cyber Crime,,,,10.1007/978-3-031-06365-7_13,Zhenzhou TianHengchao MaoYaqian HuangJie TianJinrui Li,2022,http://link.springer.com/chapter/10.1007/978-3-031-06365-7_13,Chapter
On the Use of Smelly Examples to Detect Code Smells in JavaScript,Applications of Evolutionary Computation,,,,10.1007/978-3-319-55792-2_2,Ian ShoenbergerMohamed Wiem MkaouerMarouane Kessentini,2017,http://link.springer.com/chapter/10.1007/978-3-319-55792-2_2,Chapter
"Contrastive self-supervised learning: review, progress, challenges and future research directions",International Journal of Multimedia Information Retrieval,,,,10.1007/s13735-022-00245-6,Pranjal KumarPiyush RawatSiddhartha Chauhan,2022,http://link.springer.com/article/10.1007/s13735-022-00245-6,Article
FastTagRec: fast tag recommendation for software information sites,Automated Software Engineering,,25.0,4,10.1007/s10515-018-0239-4,Jin LiuPingyi ZhouZijiang YangXiao LiuJohn Grundy,2018,http://link.springer.com/article/10.1007/s10515-018-0239-4,Article
To Merge or Not to Merge: Managing Software Product Families,Grand Timely Topics in Software Engineering,,,,10.1007/978-3-319-60074-1_4,Julia Rubin,2017,http://link.springer.com/chapter/10.1007/978-3-319-60074-1_4,Chapter
TagDeepRec: Tag Recommendation for Software Information Sites Using Attention-Based Bi-LSTM,"Knowledge Science, Engineering and Management",,,,10.1007/978-3-030-29563-9_2,Can LiLing XuMeng YanJianJun HeZuli Zhang,2019,http://link.springer.com/chapter/10.1007/978-3-030-29563-9_2,Chapter
Toward an accurate method renaming approach via structural and lexical analyses,Frontiers of Information Technology & Electronic Engineering,,23.0,5,10.1631/FITEE.2100470,Junpeng Luo 骆君鹏Jingxuan Zhang 张静宣Zhiqiu Huang 黄志球Yong Xu 徐勇Chenxing Sun 孙辰星,2022,http://link.springer.com/article/10.1631/FITEE.2100470,Article
How do developers utilize source code from stack overflow?,Empirical Software Engineering,,24.0,2,10.1007/s10664-018-9634-5,Yuhao WuShaowei WangCor-Paul BezemerKatsuro Inoue,2019,http://link.springer.com/article/10.1007/s10664-018-9634-5,Article
CROKAGE: effective solution recommendation for programming tasks by leveraging crowd knowledge,Empirical Software Engineering,,25.0,6,10.1007/s10664-020-09863-2,Rodrigo Fernandes Gomes da SilvaChanchal K. RoyMohammad Masudur RahmanKevin A. SchneiderKlérisson PaixãoCarlos Eduardo de Carvalho DantasMarcelo de Almeida Maia,2020,http://link.springer.com/article/10.1007/s10664-020-09863-2,Article
Application of Data Mining Technology in Software Engineering,Application of Intelligent Systems in Multi-modal Information Analytics,,,,10.1007/978-3-030-74814-2_49,Jing Chen,2021,http://link.springer.com/chapter/10.1007/978-3-030-74814-2_49,Chapter
The reproducibility of programming-related issues in Stack Overflow questions,Empirical Software Engineering,,27.0,3,10.1007/s10664-021-10113-2,Saikat MondalMohammad Masudur RahmanChanchal K. RoyKevin Schneider,2022,http://link.springer.com/article/10.1007/s10664-021-10113-2,Article
FixMiner: Mining relevant fix patterns for automated program repair,Empirical Software Engineering,,25.0,3,10.1007/s10664-019-09780-z,Anil KoyuncuKui LiuTegawendé F. BissyandéDongsun KimJacques KleinMartin MonperrusYves Le Traon,2020,http://link.springer.com/article/10.1007/s10664-019-09780-z,Article
CAPS: a supervised technique for classifying Stack Overflow posts concerning API issues,Empirical Software Engineering,,25.0,2,10.1007/s10664-019-09743-4,Md AhasanuzzamanMuhammad AsaduzzamanChanchal K. RoyKevin A. Schneider,2020,http://link.springer.com/article/10.1007/s10664-019-09743-4,Article
